/* Multi-Core malware
 * Thread Experiments
 * Continuously change thread-to-core attachement
 * Marcus Botacin - 2017
 * Federal University of Paraná (UFPR)
 */

/* Include block */
#include <stdio.h>
#include <Windows.h>

/* attach thread to given core */
void attach_to_core(int core)
{
	/* Current Process Handler */
	HANDLE proc = GetCurrentProcess();
	/* Update mask for current process */
	SetProcessAffinityMask(proc,1<<core);
}

/* number of cores current system has */
/* alternatively, one could query system information to discover */
#define SYSTEM_CORES 4
/* Sleep */
#define SLEEP_TIME 1000

/* Thread definition */
DWORD WINAPI T( LPVOID lpParam )
{
	int core;
	/* infinite loop */
	while(1)
	{
		/* randomly choose which core will run */
		core=rand() % SYSTEM_CORES;
		/* attach */
		attach_to_core(core);
		/* Display information */
		printf("Executing on core: %d\n",GetCurrentProcessorNumber());
		/* wait a little and switch again */
		Sleep(SLEEP_TIME);
	}
}

int main()
{
	HANDLE thread;
	/* Create thread and wait */
	thread=CreateThread(NULL,0,T,NULL,0,NULL);
	WaitForSingleObject(thread,INFINITE);
	return 0;
}